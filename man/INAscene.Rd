% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/INAscene.R
\name{INAscene}
\alias{INAscene}
\title{Evaluates scenarios in an impact network analysis (INA)}
\usage{
INAscene(
  nreals,
  ntimesteps,
  doplot = F,
  outputvol = "more",
  readgeocoords,
  geocoords = NA,
  numnodes = NA,
  xrange = NA,
  yrange = NA,
  randgeo = NA,
  readinitinfo,
  initinfo = NA,
  initinfo.norp = NA,
  initinfo.n = NA,
  initinfo.p = NA,
  initinfo.dist = NA,
  readinitbio,
  initbio = NA,
  initbio.norp = NA,
  initbio.n = NA,
  initbio.p = NA,
  initbio.dist = NA,
  readseam,
  seam = NA,
  seamdist = NA,
  seamrandp = NA,
  seampla = NA,
  seamplb = NA,
  readbpam,
  bpam = NA,
  bpamdist = NA,
  bpamrandp = NA,
  bpampla = NA,
  bpamplb = NA,
  readprobadoptvec,
  probadoptvec = NA,
  probadoptmean = NA,
  probadoptsd = NA,
  readprobestabvec,
  probestabvec = NA,
  probestabmean = NA,
  probestabsd = NA,
  maneffdir = NA,
  maneffmean = NA,
  maneffsd = NA,
  usethreshman,
  maneffthresh = NA,
  sampeffort = NA
)
}
\arguments{
\item{nreals}{number of realizations to be evaluated}

\item{ntimesteps}{number of time steps to be evaluated}

\item{doplot}{if true, plots of resulting presence of information and bioentity are generated}

\item{outputvol}{output volume, where outputvol='less' excludes the list element $multdetails from output, and outputvol='more' includes it in output.  $multdetails becomes large quickly for many realizations for large matrices so outputvol='less' would be desirable for extensive analyses}

\item{readgeocoords}{if T, read in geocoords - otherwise, generate it in each realization}

\item{geocoords}{matrix of x,y coordinates of nodes}

\item{numnodes}{(genlocs) the number of nodes, can be a vector of different numbers of nodes for scenario comparisons (numnodes can be entered as a vector to evaluate multiple scenarios)}

\item{xrange}{(genlocs) range of x coordinates, e.g., c(0,50)}

\item{yrange}{(genlocs) range of y coordinates, e.g., c(0,20)}

\item{randgeo}{(genlocs) if TRUE then locations are randomly generated (the only location generation option for the moment)}

\item{readinitinfo}{info (setup2) if T, the initial values for the vector of starting locations for the presence of information are read in rather than generated}

\item{initinfo}{info (setup2) the vector of initial values read in if readinitinfo == T, a vector with lenth equal to the number of nodes and entries 1s or 0s with 1s indicating the initial presence of information}

\item{initinfo.norp}{info (initvals) 'num' indicates initial number for presence, 'prop' indicates initial proportion}

\item{initinfo.n}{info (initvals) the number of initial locations for presence (initinfo.n can be entered as a vector to evaluate multiple scenarios)}

\item{initinfo.p}{info (initvals) the proportion of initial locations for presence (initinfo.p can be entered as a vector to evaluate multiple scenarios)}

\item{initinfo.dist}{info (initvals) the type of locations where initial presence occurs: 'random' indicates all equally likely, 'upedge' indicates that nodes closest to the upper edge have presence, 'rightedge' indicates that nodes closest to the right edge have presence}

\item{readinitbio}{bio (setup2) if T, the initial values for the vector of starting locations for the presence of the bioentity are read in rather than generated}

\item{initbio}{bio (setup2) the vector of initial values read in if readinitbio.s == T, a vector with lenth equal to the number of nodes and entries 1s or 0s with 1s indicating the initial presence of the bioentity}

\item{initbio.norp}{estab (initvals) 'num' indicates initial number for presence, 'prop' indicates initial proportion}

\item{initbio.n}{estab (initvals) the number of initial locations for presence (initbio.n can be entered as a vector to evaluate multiple scenarios)}

\item{initbio.p}{estab (initvals) the proportion of initial locations for presence (initbio.p can be entered as a vector to evaluate multiple scenarios)}

\item{initbio.dist}{estab (initvals) the type of locations where initial presence occurs: 'random' indicates all equally likely, 'upedge' indicates that nodes closest to the upper edge have presence, 'rightedge' indicates that nodes closest to the right edge have presence}

\item{readseam}{if T, the socioeconomic network adjacency matrix is read in rather than being generated from the outset}

\item{seam}{socioeconnomic network adjacency matrix, read in if readseam=T (assumed to be structured so that rows are sources and columns are sinks)}

\item{seamdist}{com (genmovnet) the function of distance used to estimate movement probability - 'random' (not related to distance) or 'powerlaw'}

\item{seamrandp}{(genmovnet) probability of link existence in random network generated for the socioeconomic network (seamrandp can be entered as a vector to evaluate multiple scenarios)}

\item{seampla}{com (genmovnet) power law parameter a in ad^(-b) (seampla can be entered as a vector to evaluate multiple scenarios)}

\item{seamplb}{com (genmovnet) power law parameter b in ad^(-b) (seamplb can be entered as a vector to evaluate multiple scenarios)}

\item{readbpam}{if T, the biophysical network adjacency matrix, describing dispersal likelihoods, is read in rather than being generated from the outset}

\item{bpam}{biophysical adjacency matrix, read in if readbpam=T (assumed to be structured so that rows are sources and columns are sinks)}

\item{bpamdist}{disp (genmovnet) the function of distance used to estimate movement probability - 'random' (not related to distance) or 'powerlaw'}

\item{bpamrandp}{(genmovnet) if bpamdist='random', the probability a link exists in the biophysical network adjacency matrix (bpamrandp can be entered as a vector to evaluate multiple scenarios)}

\item{bpampla}{disp (genmovnet) power law parameter a in ad^(-b) (bpampla can be entered as a vector to evaluate multiple scenarios)}

\item{bpamplb}{disp (genmovnet) power law parameter b in ad^(-b)  (bpamplb can be entered as a vector to evaluate multiple scenarios)}

\item{readprobadoptvec}{if T, read in a vector of probabilities of adoption for each node in socioeconomic network - if F, generate this vector}

\item{probadoptvec}{vector of probabilities of adoption for each node in socioeconomic network, read in if readprobadoptvec=T}

\item{probadoptmean}{(makedec) mean probability of adopting management if informed (probadoptmean can be entered as a vector to evaluate multiple scenarios)}

\item{probadoptsd}{(makedec) sd in truncated normal distribution of probability of adoption (probadoptsd can be entered as a vector to evaluate multiple scenarios)}

\item{readprobestabvec}{if T, read in a vector of probabilities of establishment for each node in biophysical network - if F, generate this vector}

\item{probestabvec}{vector of probabilities of establishment for each node in biophysical network, read in if readprobestabvec=T}

\item{probestabmean}{(estab) mean probability of establishment (new or CONTINUED) in absence of management (probestabmean can be entered as a vector to evaluate multiple scenarios)}

\item{probestabsd}{(estab) sd of probability of establishment in absence of management in truncated normal distribution (probestabsd can be entered as a vector to evaluate multiple scenarios)}

\item{maneffdir}{if maneffdir='decrease_estab', the management reduces the probability of establishment; if maneffdir='increase_estab', the management reduces the probability that establishment does NOT occur}

\item{maneffmean}{(estinfo, estab) the underlying mean change in establishment probability (as a proportion) resulting from management technology (maneffmean can be entered as a vector to evaluate multiple scenarios)}

\item{maneffsd}{(estinfo, estab) the standard deviation of the management technology effect (maneffsd can be entered as a vector to evaluate multiple scenarios)}

\item{usethreshman}{() if T, the threshold for management is used, so that information is never present anywhere unless the management effect estimate exceeds the threshold}

\item{maneffthresh}{(estinfo) the threshold effect size for communicating about management (maneffthresh can be entered as a vector to evaluate multiple scenarios)}

\item{sampeffort}{(estinfo) the sampling effort, where increasing sampling effort results in a more precise estimate of the management effect size (sampeffort can be entered as a vector to evaluate multiple scenarios)}
}
\description{
This function implements and summarizes multiple simulations across a designated range of parameter values
}
\details{
Updated 2020-10-13
}
\examples{
j25.readgeocoords <- INAscene(nreals=3, ntimesteps=3, doplot=F, readgeocoords=T, geocoords=matrix(c(1,1, 1,2, 1,3, 2,1, 2,2, 2,3),byrow=T,ncol=2), numnodes=NA, xrange=NA, yrange=NA, randgeo=F, readinitinfo=T, initinfo=c(1,1,1,0,0,0), initinfo.norp=NA, initinfo.n=NA, initinfo.p=NA, initinfo.dist=NA, readinitbio=T, initbio=c(0,0,0,1,1,1), initbio.norp=NA, initbio.n=NA, initbio.p=NA,  initbio.dist=NA, readseam=F, seam=NA, seamdist='random', seamrandp=c(0.01,0.05,0.1,0.5), seampla=NA, seamplb=NA, readbpam=F, bpam=NA, bpamdist='random', bpamrandp=0.1, bpampla=NA, bpamplb=NA, readprobadoptvec=F, probadoptvec=NA, probadoptmean=0.1, probadoptsd=0.1, readprobestabvec=F, probestabvec=NA, probestabmean=0.1, probestabsd=0.1, maneffdir='decrease_estab', maneffmean=0.5, maneffsd=0.1, usethreshman=F, maneffthresh=NA, sampeffort=NA) 
j25.baseline <- INAscene(nreals=3, ntimesteps=3, doplot=F, readgeocoords=F, geocoords=NA, numnodes=50, xrange=c(0,10), yrange=c(0,20), randgeo=T, readinitinfo=F, initinfo=NA, initinfo.norp='num', initinfo.n=5, initinfo.p=NA, initinfo.dist='random', readinitbio=F, initbio=NA, initbio.norp='num', initbio.n=5, initbio.p=NA,  initbio.dist='random', readseam=F, seam=NA, seamdist='powerlaw', seamrandp=NA, seampla=1, seamplb=0.5, readbpam=F, bpam=NA, bpamdist='powerlaw', bpamrandp=NA, bpampla=1, bpamplb=0.5, readprobadoptvec=F, probadoptvec=NA, probadoptmean=0.5, probadoptsd=0.2, readprobestabvec=F, probestabvec=NA, probestabmean=0.5, probestabsd=0.2, maneffdir='decrease_estab', maneffmean=0.5, maneffsd=0.2, usethreshman=T, maneffthresh=0.5, sampeffort=2) 
j25.baseline$multout
j25.readseam <- INAscene(nreals=3, ntimesteps=3, doplot=F, readgeocoords=T, geocoords=matrix(c(1,1, 1,2, 1,3, 2,1, 2,2, 2,3),byrow=T,ncol=2), numnodes=NA, xrange=NA, yrange=NA, randgeo=F, readinitinfo=T, initinfo=c(1,1,1,0,0,0), initinfo.norp=NA, initinfo.n=NA, initinfo.p=NA, initinfo.dist=NA, readinitbio=T, initbio=c(0,0,0,1,1,1), initbio.norp=NA, initbio.n=NA, initbio.p=NA,  initbio.dist=NA, readseam=T, seam=matrix(c(1,0,0,0,1,0, 0,1,0,0,1,0, 0,0,1,0,1,0, 0,1,0,1,0,0, 0,0,0,0,1,1, 0,1,0,0,0,1),byrow=T,nrow=6), seamdist=NA, seamrandp=NA, seampla=NA, seamplb=NA, readbpam=F, bpam=NA, bpamdist='random', bpamrandp=0.1, bpampla=NA, bpamplb=NA, readprobadoptvec=F, probadoptvec=NA, probadoptmean=0.1, probadoptsd=0.1, readprobestabvec=F, probestabvec=NA, probestabmean=0.1, probestabsd=0.1, maneffdir='decrease_estab', maneffmean=0.5, maneffsd=0.1, usethreshman=F, maneffthresh=NA, sampeffort=NA) 
sens.probadoptmean <- INAscene(nreals=15, ntimesteps=3, doplot=F, readgeocoords=F, geocoords=NA, numnodes=50, xrange=c(0,10), yrange=c(0,20), randgeo=T, readinitinfo=F, initinfo=NA, initinfo.norp='num', initinfo.n=5, initinfo.p=NA, initinfo.dist='random', readinitbio=F, initbio=NA, initbio.norp='num', initbio.n=5, initbio.p=NA,  initbio.dist='random', readseam=F, seam=NA, seamdist='powerlaw', seamrandp=NA, seampla=1, seamplb=0.5, readbpam=F, bpam=NA, bpamdist='powerlaw', bpamrandp=NA, bpampla=1, bpamplb=0.5, readprobadoptvec=F, probadoptvec=NA, probadoptmean=seq(0,1,0.1), probadoptsd=0.2, readprobestabvec=F, probestabvec=NA, probestabmean=0.5, probestabsd=0.2, maneffdir='decrease_estab', maneffmean=0.9, maneffsd=0.2, usethreshman=T, maneffthresh=0.3, sampeffort=2) 
jt <- sens.probadoptmean$multout
plot(jt$probadoptmean, jt$mestab, xlab='Mean probability of adopting technology if informed', ylab='Proportion nodes with bioentity', xlim=c(0,1), ylim=c(0,1))
plot(jt$probadoptmean, jt$mdec, xlab='Mean probability of adopting technology if informed', ylab='Proportion nodes with technology adoption', xlim=c(0,1), ylim=c(0,1))
sens.seamplb <- INAscene(nreals=15, ntimesteps=3, doplot=F, readgeocoords=F, geocoords=NA, numnodes=50, xrange=c(0,50), yrange=c(0,50), randgeo=T, readinitinfo=F, initinfo=NA, initinfo.norp='num', initinfo.n=5, initinfo.p=NA, initinfo.dist='random', readinitbio=F, initbio=NA, initbio.norp='num', initbio.n=5, initbio.p=NA,  initbio.dist='random', readseam=F, seam=NA, seamdist='powerlaw', seamrandp=NA, seampla=1, seamplb=seq(0,2,0.1), readbpam=F, bpam=NA, bpamdist='powerlaw', bpamrandp=NA, bpampla=1, bpamplb=0.5, readprobadoptvec=F, probadoptvec=NA, probadoptmean=0.7, probadoptsd=0.2, readprobestabvec=F, probestabvec=NA, probestabmean=0.5, probestabsd=0.2, maneffdir='decrease_estab', maneffmean=0.9, maneffsd=0.2, usethreshman=T, maneffthresh=0.3, sampeffort=2) 
jt2 <- sens.seamplb$multout
plot(jt2$seamplb, jt2$mestab, xlab='Power law parameter b in ad^(-b) for communication links', ylab='Proportion nodes with bioentity', xlim=c(0,2), ylim=c(0,1))
plot(jt2$seamplb, jt2$mdec, xlab='Power law parameter b in ad^(-b) for communication links', ylab='Proportion nodes with technology adoption', xlim=c(0,2), ylim=c(0,1))
plot(jt2$seamplb, jt2$mcom, xlab='Power law parameter b in ad^(-b) for communication links', ylab='Proportion nodes with information about technology', xlim=c(0,2), ylim=c(0,1))
j25.seamrandp <- INAscene(nreals=3, ntimesteps=3, doplot=F, readgeocoords=F, geocoords=NA, numnodes=50, xrange=c(0,10), yrange=c(0,20), randgeo=T, readinitinfo=F, initinfo=NA, initinfo.norp='num', initinfo.n=5, initinfo.p=NA, initinfo.dist='random', readinitbio=F, initbio=NA, initbio.norp='num', initbio.n=5, initbio.p=NA,  initbio.dist='random', readseam=F, seam=NA, seamdist='random', seamrandp=c(0.01,0.05,0.1,0.5), seampla=NA, seamplb=NA, readbpam=F, bpam=NA, bpamdist='random', bpamrandp=0.1, bpampla=NA, bpamplb=NA, readprobadoptvec=F, probadoptvec=NA, probadoptmean=0.1, probadoptsd=0.1, readprobestabvec=F, probestabvec=NA, probestabmean=0.1, probestabsd=0.1, maneffdir='decrease_estab', maneffmean=0.5, maneffsd=0.1, usethreshman=F, maneffthresh=NA, sampeffort=NA) 
sens.exp2a <- INAscene(nreals=10, ntimesteps=10, doplot=F, readgeocoords=F, geocoords=NA, numnodes=50, xrange=c(0,50), yrange=c(0,50), randgeo=T, readinitinfo=F, initinfo=NA, initinfo.norp='prop', initinfo.n=NA, initinfo.p=0.05, initinfo.dist='random', readinitbio=F, initbio=NA, initbio.norp='prop', initbio.n=NA, initbio.p=0.05,  initbio.dist='upedge', readseam=F, seam=NA, seamdist='powerlaw', seamrandp=NA, seampla=1, seamplb=0.5, readbpam=F, bpam=NA, bpamdist='powerlaw', bpamrandp=NA, bpampla=1, bpamplb=0.5, readprobadoptvec=F, probadoptvec=NA, probadoptmean=0.5, probadoptsd=0.2, readprobestabvec=F, probestabvec=NA, probestabmean=0.5, probestabsd=0.2, maneffdir='decrease_estab', maneffmean=0.5, maneffsd=0.2, usethreshman=F, maneffthresh=NA, sampeffort=2) 
sens.exp2a <- INAscene(nreals=10, ntimesteps=10, doplot=F, outputvol='less', readgeocoords=F, geocoords=NA, numnodes=50, xrange=c(0,50), yrange=c(0,50), randgeo=T, readinitinfo=F, initinfo=NA, initinfo.norp='prop', initinfo.n=NA, initinfo.p=0.05, initinfo.dist='random', readinitbio=F, initbio=NA, initbio.norp='prop', initbio.n=NA, initbio.p=0.05,  initbio.dist='upedge', readseam=F, seam=NA, seamdist='powerlaw', seamrandp=NA, seampla=1, seamplb=0.5, readbpam=F, bpam=NA, bpamdist='powerlaw', bpamrandp=NA, bpampla=1, bpamplb=0.5, readprobadoptvec=F, probadoptvec=NA, probadoptmean=0.5, probadoptsd=0.2, readprobestabvec=F, probestabvec=NA, probestabmean=0.5, probestabsd=0.2, maneffdir='decrease_estab', maneffmean=0.5, maneffsd=0.2, usethreshman=F, maneffthresh=NA, sampeffort=2) 
}
\keyword{experiments}
\keyword{simulation}
